digraph "Library.EffectsManager.ApplyEffect"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="Library.EffectsManager.Apply\lEffect",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Aplica un efecto específico a un Pokémon."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Library.Tests.EffectsManager\lTests.IcanAttackWhenPokemonHasNon\lControlEffectReturnsTrue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classLibrary_1_1Tests_1_1EffectsManagerTests.html#acecf925bda09e71a05e5c39129b5d393",tooltip="Prueba que el método EffectsManager.IcanAttack devuelva verdadero cuando un Pokémon tenga un efecto q..."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Library.Tests.EffectsManager\lTests.IcanAttackWhenPokemonHasParalyze\lEffectAndCannotAttackReturnsFalse",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classLibrary_1_1Tests_1_1EffectsManagerTests.html#a9018e71197dace93da1aa0ec7f11e419",tooltip="Prueba que el método EffectsManager.IcanAttack devuelva falso cuando un Pokémon tenga el efecto de pa..."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Library.Tests.EffectsManager\lTests.IcanAttackWhenPokemonHasSleep\lEffectAndCannotAttackReturnsFalse",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classLibrary_1_1Tests_1_1EffectsManagerTests.html#a4a9c96b0d16140f3bbd8af6844c16e11",tooltip="Prueba que el método EffectsManager.IcanAttack devuelva falso cuando un Pokémon tenga el efecto de su..."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="Library.Tests.EffectsManager\lTests.IsParalyzeWhenPokemonHasOther\lEffectsReturnsFalse",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classLibrary_1_1Tests_1_1EffectsManagerTests.html#a93cdb33901bbfc19127aa9b9c6c2b687",tooltip="Prueba que el método EffectsManager.IsParalyze devuelva falso cuando un Pokémon tenga un efecto disti..."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="Library.Tests.EffectsManager\lTests.IsParalyzeWhenPokemonHasParalyze\lEffectReturnsTrue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classLibrary_1_1Tests_1_1EffectsManagerTests.html#ad9fdd1e3ad15140089adb0719085a940",tooltip="Prueba que el método EffectsManager.IsParalyze devuelva verdadero cuando un Pokémon tenga el efecto d..."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="Library.Tests.EffectsManager\lTests.ProcesarControlMasaWhenPokemon\lHasNonControlEffectIgnoresEffect",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classLibrary_1_1Tests_1_1EffectsManagerTests.html#ab78c9d9bcf4afcd077c87389c9597870",tooltip="Prueba que el método EffectsManager.ProcesarControlMasa ignore los efectos no controlables,..."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="Library.Tests.EffectsManager\lTests.ProcesarControlMasaWhenPokemon\lHasParalyzeEffectReturnsParalyzeEffectDescription",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classLibrary_1_1Tests_1_1EffectsManagerTests.html#a130d7fcf63ad7a0de119cdc4f0362992",tooltip="Prueba que el método EffectsManager.ProcesarControlMasa devuelva la descripción del efecto de parális..."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="Library.Tests.EffectsManager\lTests.ProcesarControlMasaWhenPokemon\lHasSleepEffectReturnsSleepEffectDescription",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classLibrary_1_1Tests_1_1EffectsManagerTests.html#a4785fb1e42d0e785147fdf572dbda324",tooltip="Prueba que el método EffectsManager.ProcesarControlMasa devuelva la descripción del efecto de sueño c..."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="Tests.BattleTest.Simulate\lBattle",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classTests_1_1BattleTest.html#a68461692bba7299b56336fdd9788ceeb",tooltip="Simula una batalla entre dos entrenadores con sus respectivos Pokémon, verificando el uso de ataques,..."];
}
